//Dec to bin and hex converter
//Assembly 8086
Progr           segment
                assume  cs:Progr, ds:dane, ss:stosik
 
start:          mov     ax,dane
                mov     ds,ax
                mov     ax,stosik
                mov     ss,ax
                mov     sp,offset szczyt
main:
		call wysnapis
                call pobierz
                call podziel
                call wyswietl	
		call nowalinia
                call ustawhex
                call podziel
                call wyswietl
                call koniec
wysnapis:
		mov dx, offset napis
		mov ah,09h
		int 21h
		ret
pobierz:
                mov ah,01h
                int 21h
                cmp al,0Dh              ;sprawdz enter
                jz ustawbin                 
                cmp al,'0'
                jl reset                
                cmp al,'9'
                jg reset                
                mov cl,al      
                mov ax,liczba       	
                mov bx,10       	
                mul bx        	        
                jc reset                
                mov liczba,ax
                mov bl,cl
                sub bl,48               
                mov bh,0
                add liczba,bx ;
		jc reset  
		cmp al,0Dh
                loopnz pobierz
                ret
reset:
		mov dx, offset bladCyfra
		mov ah,09h ;wyswietla napis
		int 21h
               	call nowalinia
                mov liczba,0
                call main

nowalinia:
		mov ah, 0eh
		mov al,10 ;nowa linia
                int 10h
                mov al,13 ;powrot do lewej strony konsoli
                int 10h	
		ret
ustawbin:
                mov cx,16
                mov ax,liczba 
		lea si,binarna
		mov bx,2
		mov koncowka,'b'
                ret
podziel:
                mov dx,0
                div bx
                mov [si],dl
                inc si
                inc licznik
                cmp ax,0
                je zakoncz
                loopnz podziel
zakoncz:
                dec si
		mov cx,licznik
                ret 
ustawhex:
                mov ax,liczba
                mov cx,4
		lea si,szesna
                mov licznik,0
		mov bx,16
		mov koncowka,'h'
                ret
wyswietl:
                mov bl,[si]
                call znak
                dec si
                mov ah, 0eh
                mov al,bl
                int 10h
                loop wyswietl
		mov ah, 0eh
                mov al,koncowka ;literka na koncu liczby
                int 10h
                ret
znak:
                cmp bl,9
                jg dodaj
                add bl,48
                ret
dodaj:
                add bl,55 ;dodaje roznice by zrobic duza litere 
                ret
koniec:
                mov     ah,00
                int 16h
                mov     ah,4ch
                int 21h
Progr           ends
 
dane            segment

binarna db 16 dup(0) ;16 komorek pamieci wypelnionych nullami odpowiednik tablicy
szesna db 4 dup(0) ;4 komorki pamieci 
bladCyfra db "  Podana cyfra jest bledna$"
napis db "Podaj liczbe: $"
liczba dw 0   ;liczba podana przez uzytkownika 2bajty
licznik dw 0  ;liczy ile wydrukowac do petli
koncowka db 0 ;jaka wartosc na koncu h czy b

dane            ends
 
stosik          segment
                dw    100h dup(0)
szczyt          Label word
stosik          ends
 
end start
